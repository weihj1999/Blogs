
AWS Application Load Balancer
作者: Jeff Barr
原文: https://aws.amazon.com/cn/blogs/aws/new-aws-application-load-balancer/


AWS在2009年启动了弹性负载均衡(ELB), 随后ELB成了AWS支持的应用的关键的架构组件。 与自动扩展功能集合，在维护高可用应用的时候， ELB大大简化了构建自动扩展和缩减应用的任务。

实话实说
根据大家都知道OSI模型， 负载均衡通常运行在第四层（传输层）或者第七层（应用层）。 

一个四层的负载均衡在网络协议层级工作，并不深入到网络数据包内部， 同时并不关心HTTP或者HTTPS协议的特殊性， 换句话说，它平衡负载的时候，并不关心内容。

一个七层的负载均衡就有单更复杂（sophisticated），也更强大。 它分析数据包，访问HTTP或者HTTPS的头部，也可以在分发负载到目的地的时候后做更智能的工作。 

AWS的应用负载均衡
今天我们启动一个应用负载均衡器（AELB），它就是运行在七层的， 支持大量高级功能。 原始的功能（现在叫Classic Load Balance）仍然可以使用， 仍然可以支持4层和7层的功能。
 
应用负载均衡支持基于内容的路由， 支持运行在容器中的应用。 支持行业标准协议（WebSocket和HTTP/2）， 也能提供额外的可视性到目标虚拟机实例和容器的安全性。应用负载均衡将给运行在容器或者EC2实例中的网站和手机应用带来很大益处。

让我们再走近些，看看那些功能，创建自己的应用ELB
基于内容的路由
应用ELB访问HTTP的报头，允许把请求分发到不同的后台服务。 比如说，我们发送一个在URL路径中包含/api的请求到一组服务器（称为目标组），包含/mobile的请求到另外一组。这种构造中路由请求允许我们创建由多个微服务组成的应用，可以独立扩展和应用。

正如我们刚刚看到的， 每一个应用ELB允许用户定义最多10个基于URL的规则来转发请求到目标组。随着时间推移（Over time,），我们可以给你更多的其他的路由方法。

支持基于容器的应用
许多AWS的用户把他们的微服务打包到容器里面，然后放到EC2容器服务上。 这样就允许一个EC2实例运行一个或者多个服务。但是这就给传统的使用端口映射和健康检查的负载均衡带来了有趣的挑战

应用ELB理解和支持基于容器的应用，允许一个虚拟机实例运行多个容器，监听同样的目标组的多个端口，执行粒度和端口级的健康检查。

更好的度量
应用ELB可以在一个端口的基础上执行和报告健康检查。 健康检查可以指定一个可以几首的HTTP响应范围。 通过详细的错误代码取得。

作为基于内容路由的副产品， 你可以有机会针对每一个微服务收集度量数据，这真是个很棒的副作用，每个微服务可以运行在它自己的目标组中，在一个特定的EC2实例中。这种增强的可见性允许你作出更好的动态扩展和收缩来相应服务的负载。

应用ELB提供几个新的CloudWatch度量，包含大量的流量（traffic），大量的活跃链接

支持额外的协议和工作负载
应用ELB支持两个额外的协议WebSocket和HTTP/2
WebSocket允许在客户端和服务器之间建立TCP长连接， 这是一个非常有效率的做法，被持有的HTTP连接在一个很长的时间中发起一个心跳。WebSocket对移动设备非常好，可以用来分发股票信息，体育比分和其它动态数据，同时最小化电量消耗,AELB通过ws://和wss://协议提供内置支持。

HTTP/2是对HTTP1.1协议的明显增强。 这个更新的协议功能，支持经过一个简单连接支持多路复用的请求（multiplexed request）， 这降低了网络流量，就像协议的二进制功能做的一样。

AELB设计之初用来处理数据流， 实时的WebSocket负载。 而不是缓存请求和响应，处理起来是无缝的， 这降低了延迟，增加了应用的接受性能。

创建一个ALB
下面我们来川建一个AELB， 在Elastic Load Balance 控制台操作即可
 
点选Application load balance， 输入一个名字MyALB，点选internet-facing，这里添加一个https监听器，
 
在同一个页面，选择一个VPC（这是一个VPC的功能）和一个子网， 加上一个标签，然后到下一步Configure Security Settings
 
因为这里创建的是HTTPS监听器， 所以AELB需要一个证书，选在一个已有的证书，或者也可以通过AWS Certificate Manager（ACM）上传一个本地证书，或者请求一个新的证书
 
向右看，创建安全做，这里创建一个新的
 
然后创建一个目标组， 以及配置健康检查
 
现在就可以选择目标了， 一些列的EC2实例，他们将通过我的AELB来接收网络通讯流量。
 
最后就是检查AELB配置选项，然后进行创建
 
创建成功后的显示是这一个样子的
 
这里还可以创建额外的目标组
 
然后我们创建新的规则来路由/api请求到这个组
 
AELB可以和多个AWS服务协同工作，比如说Auto Scaling, Amazon ECS, AWS CloudFormation, AWS CodeDeploy, and AWS Certificate Manager (ACM)

Moving on Up
我们可以使用一个叫做Load Balancer Copy Utility的工具来对ELB进行迁移。 这个Python的工具可以使用同样的配置信息来创建新的ELB，同时可以注册给已经存在的EC2 实例使用。

可用性和定价
ELB目前在AWS上可以使用了， 使用AELB可以比传统的Loadbalance降低10%，按小时计费。

使用AELB，按照小时产生账单，按照负载能力单元（LCU）来计价，一个LCU统计	每秒的连接数，每秒的活跃连接数，以及传送的数据。 通常测量这三个维度， 但是账单统计将基于最高的那个， 一个LCU足够支持下面的任意一种：
每秒25个连接数，使用一个2KB的证书， 3000活跃连接数，2.22Mbps的数据传送
Or
每秒5个连接数，使用一个4KB的证书，3000活跃连接数，2.22Mbps的数据传送

LCU的使用情况的账单是小数的， 每个小时每个LCU收费$0.006. 基于我们的计算，我们相信，从传统的负载均衡迁移到AELB, 所有的客户可以降低他们的网络消耗，




